<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="world" default="empty"/> 
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- arg name="world_name" value="$(find mybot_gazebo)/worlds/mybot.world"/ -->
    <!-- <arg name="world_name" value="$(find sandbox_robot_gazebo)/worlds/turtlebot_playground.world"/> -->
    <arg name="world_name" value="$(find sandbox_robot_gazebo)/worlds/appbot.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

<!--   <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan"> -->
      <!-- Pixel rows to use to generate the laserscan. For each column, the scan will
           return the minimum value for those pixels centered vertically in the image. -->
<!--       <param name="scan_height" value="100"/>
      <param name="output_frame_id" value="/rgbd_camera_depth_frame"/>
      <param name="range_min" value="0.05"/>
      <remap from="image" to="/rgbd_camera/depth/image_raw"/>
      <remap from="camera_info" to="/rgbd_camera/depth/camera_info"/>
      <remap from="scan" to="/rgbd_camera/depth/scan" />
  </node>
 -->
  <!-- <param name="robot_description" command="$(find xacro)/xacro.py '$(find sandbox_robot_description)/urdf/mybot.xacro'"/> -->
<!--   <param name="robot_description" command="$(find xacro)/xacro.py '$(find sandbox_robot_description)/urdf/big_warehouse_robot.xacro'"/> -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find sandbox_robot_description)/urdf/warehouse_robot_with_3d_camera.xacro'"/>

  <node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model mybot -x 1.0 -y 1.0 " />

   <node pkg="tf" type="static_transform_publisher" name="rgbd_camera_tf" args="0.65 0 0.20 -1.58 0 -1.58 /base_link /rgbd_camera_optical_frame 100"/>

</launch>
